(defwindow bar0 :monitor 0
               :geometry (geometry :x "0%"
                                   :y "0%"
                                   :height "20px"
                                   :width "100%"
                                   :anchor "center top")
               :stacking "fg" 
               :exclusive true
               :focusable false
  (box :class "root"
      :valign "center"
      :halign "center"
      :orientation "horizontal"
    (workspaces_eDP-1)
    (box :halign "end"
         :valign "center"
         :orientation "horizontal"
         :space-evenly false
         :spacing 10
      ;(route53)
      (battery)
      (time)
      (date))))

(defwindow bar1 :monitor 1
               :geometry (geometry :x "0"
                                   :y "0"
                                   :height "30px"
                                   :width "100%"
                                   :anchor "top center")
               :stacking "fg" 
               :exclusive true
               :focusable false
  (box :class "root"
      :valign "center"
      :width 100
      :orientation "horizontal"
    (workspaces_HDMI-A-1)
    (box :halign "end"
         :valign "center"
         :orientation "horizontal"
         :space-evenly false
         :spacing 10
      (battery)
      (time)
      (date))))

(defwindow bar2 :monitor 2
               :geometry (geometry :x "0%"
                                   :y "0%"
                                   :width "20px"
                                   :height "100%"
                                   :anchor "left center")
               :stacking "bottom" 
               :exclusive true
               :focusable false
  (box :class "root"
       :orientation "horizontal"
    (workspaces_DP-2)))

; ╺╸state╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defpoll time_poll :interval "1s" "date +%H:%M")
(defpoll date_poll :interval "1m" "date +%d/%m")
(defpoll route53_poll :interval "1m" "./route53.sh")

(deflisten workspaces_HDMI-A-1
;  :initial '{"active": "", "workspaces": []}'
  "./modules/sway-workspaces.sh HDMI-A-1")

(deflisten workspaces_eDP-1
;  :initial '{"active": "1", "workspaces": []}'
  "./modules/sway-workspaces.sh eDP-1")

(deflisten workspaces_DP-2
;  :initial '{"active": "1", "workspaces": []}'
  "./modules/sway-workspaces.sh DP-2")

; ╺╸workspaces╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸

(defwidget workspaces_HDMI-A-1 []
  (box :class "workspaces"
       :orientation "horizontal"
       :space-evenly true
       :halign "start"
       :valign "center"
       :width 20
    (for name in {workspaces_HDMI-A-1.list}
      (button :class "workspace ${name == workspaces_HDMI-A-1.active ? "active" : "hidden"}"
        (label :text "${name}" :halign "center" :xalign 0.5 :justify "right")))))

(defwidget workspaces_eDP-1 []
  (box :class "workspaces"
       :orientation "horizontal"
       :space-evenly true
       :halign "start"
       :valign "center"
       :width 20
    (for name in {workspaces_eDP-1.list}
      (button :class "workspace ${name == workspaces_eDP-1.active ? "active" : "hidden"}"
        (label :text "${name}" :halign "center" :xalign 0.5 :justify "right")))))

(defwidget workspaces_DP-2 []
  (box :class "workspaces"
       :orientation "horizontal"
       :space-evenly true
       :halign "start"
       :valign "center"
       :width 20
    (for name in {workspaces_DP-2.list}
      (button :class "workspace ${name == workspaces_DP-2.active ? "active" : "hidden"}"
        (label :text "${name}" :halign "center" :xalign 0.5 :justify "right")))))


(defwidget battery []
  (box :class "battery"
       :orientation "horizontal"
       :space-evenly true
       :halign "center"
       :valign "end"
       :width 20
    (label :text "󰁹 ${EWW_BATTERY["BAT0"].capacity}" :halign "center" :xalign 0.5 :justify "right")))

(defwidget date []
  (box :class "date"
       :orientation "horizontal"
       :space-evenly true
       :valign "center"
       :halign "end"
       :width 20
    (label :text date_poll)))

(defwidget time []
  (box :class "time"
       :orientation "horizontal"
       :space-evenly true
       :valign "end"
       :halign "center"
       :width 20
    (label :text time_poll))) 

(defwidget route53 []
  (box 
    :class "route53"
    :class "route53 ${route53_poll.change == "true" ? "changed" : "unchanged"}"
    :orientation "horizontal"
    :space-evenly true
    :valign "center"
    :halign "end"
    :width 20
          (label :text "${route53_poll.status}")))
      
